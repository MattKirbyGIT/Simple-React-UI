{"version":3,"sources":["components/global/Icon.jsx","components/global/ButtonAdv.jsx","components/global/SingleLineInput.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Icon","state","icon","undefined","handleIcon","props","setState","faTimes","faImage","faArrowRight","faExclamationCircle","faCheck","faEllipsisH","faSearch","faBars","faUserPlus","faSignInAlt","faPlus","faTag","faClipboard","this","className","style","display","backgroundColor","bgColor","width","height","color","iconColor","fontSize","size","Component","ButtonAdv","handleHover","hover","componentDidMount","bg","bgHov","label","classes","pill","shadow","topRight","join","reverse","Fragment","Fade","appear","in","unmountOnExit","handlePanelClasses","background","transition","flexDirection","justifyContent","onMouseEnter","onMouseLeave","onClick","click","maxWidth","reveal","labelColor","handleLabelClasses","iconHov","SLInput","handleFocus","event","focus","onBlur","handleInputChange","val","input","sizerWidth","sizerRef","current","clientWidth","minWidth","inputWidth","inputSubmit","handleClear","focusOnMount","preWidth","inputRef","React","createRef","class","textSize","position","prepend","maxHeight","ref","type","autoFocus","onFocus","value","placeholder","onChange","e","target","shrink","clear","App","renderDisgardToast","handleTitleInput","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1a69dac9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faImage,\n  faTimes,\n  faSearch,\n  faArrowRight,\n  faExclamationCircle,\n  faCheck,\n  faEllipsisH,\n  faBars,\n  faPlus,\n  faUserPlus,\n  faSignInAlt,\n  faTag,\n  faClipboard,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"../../styles/global/Icon.css\";\n\nclass Icon extends Component {\n  state = { icon: undefined };\n\n  handleIcon = () => {\n    if (this.props.icon === \"close\") {\n      this.setState({ icon: faTimes });\n    } else if (this.props.icon === \"photo\") {\n      this.setState({ icon: faImage });\n    } else if (this.props.icon === \"arrowRight\") {\n      this.setState({ icon: faArrowRight });\n    } else if (this.props.icon === \"exclam\") {\n      this.setState({ icon: faExclamationCircle });\n    } else if (this.props.icon === \"check\") {\n      this.setState({ icon: faCheck });\n    } else if (this.props.icon === \"elipsis\") {\n      this.setState({ icon: faEllipsisH });\n    } else if (this.props.icon === \"search\") {\n      this.setState({ icon: faSearch });\n    } else if (this.props.icon === \"hamburgerMenu\") {\n      this.setState({ icon: faBars });\n    } else if (this.props.icon === \"userPlus\") {\n      this.setState({ icon: faUserPlus });\n    } else if (this.props.icon === \"signIn\") {\n      this.setState({ icon: faSignInAlt });\n    } else if (this.props.icon === \"plus\") {\n      this.setState({ icon: faPlus });\n    } else if (this.props.icon === \"tag\") {\n      this.setState({ icon: faTag });\n    } else if (this.props.icon === \"clipboard\") {\n      this.setState({ icon: faClipboard });\n    } else {\n    }\n  };\n\n  componentDidMount() {\n    this.handleIcon();\n  }\n\n  render() {\n    return (\n      <div\n        className=\"icon-wrapper p-2\"\n        style={{\n          display: this.props.display ? \"flex\" : \"none\",\n          backgroundColor: this.props.bgColor,\n          width: \"2em\",\n          height: \"2em\",\n        }}\n      >\n        <FontAwesomeIcon\n          className=\"icon effect\"\n          icon={this.state.icon}\n          color={this.props.iconColor}\n          style={{ fontSize: this.props.size ? this.props.size : \"1.4em\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Icon;\n","import React, { Component } from \"react\";\nimport Icon from \"./Icon\";\nimport Fade from \"react-bootstrap/Fade\";\nimport \"../../styles/global/ButtonAdv.css\";\n\nclass ButtonAdv extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      display: props.display,\n      hover: false,\n      bg: \"#f8f9fa\",\n      bgHov: \"#e9ecef\",\n      fontSize: \"1.2em\",\n      icon: props.icon,\n      label: props.label,\n    };\n  }\n\n  handlePanelClasses() {\n    var classes = [];\n    if (this.props.pill) {\n      classes[0] = \"rounded-pill\";\n    } else {\n      classes[0] = \"rounded-lg\";\n    }\n\n    if (this.props.shadow) {\n      classes[1] = \"shadow\";\n    }\n\n    if (this.props.topRight) {\n      classes[2] = \"topRight\";\n    }\n    return classes.join(\" \");\n  }\n\n  handleLabelClasses() {\n    var classes = [];\n    if (this.state.icon) {\n      if (this.props.reverse) {\n        classes[0] = \"pr-3\";\n      } else {\n        classes[0] = \"pl-3\";\n      }\n    } else {\n      classes[0] = \"px-3\";\n    }\n    return classes.join(\" \");\n  }\n\n  handleHover = () => {\n    this.setState({ hover: !this.state.hover });\n  };\n\n  componentDidMount = () => {\n    if (this.props.bg) {\n      this.setState({ bg: this.props.bg, bgHov: this.props.bgHov });\n    }\n\n    if (this.props.fontSize) {\n      this.setState({ fontSize: this.props.fontSize });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Fade appear={true} in={this.props.display} unmountOnExit={true}>\n          <div\n            style={{\n              display: this.props.display ? \"block\" : \"none\",\n              width: this.props.width,\n            }}\n          >\n            <div\n              className={\"TB-panel \" + this.handlePanelClasses()}\n              style={{\n                background: this.state.hover ? this.state.bgHov : this.state.bg,\n                transition: \"all 200ms\",\n                fontSize: this.state.fontSize,\n                flexDirection: this.props.reverse ? \"row-reverse\" : \"row\",\n                width: this.props.width,\n                justifyContent: \"center\",\n              }}\n              onMouseEnter={this.handleHover}\n              onMouseLeave={this.handleHover}\n              onClick={this.props.click}\n            >\n              <div\n                style={{\n                  maxWidth:\n                    this.props.reveal && !this.state.hover ? \"0\" : \"200px\",\n                  transition: \"all 200ms\",\n                  color: this.props.labelColor,\n                  display: this.state.label ? \"block\" : \"none\",\n                }}\n              >\n                <p className={\"TB-label my-2 \" + this.handleLabelClasses()}>\n                  {this.props.label}\n                </p>\n              </div>\n              <div\n                className={\"m-1\"}\n                style={{ display: this.state.icon ? \"block\" : \"none\" }}\n              >\n                <Icon\n                  size={this.state.fontSize}\n                  display={true}\n                  icon={this.state.icon}\n                  iconColor={\n                    this.state.hover && this.props.iconHov\n                      ? this.props.iconHov\n                      : this.props.iconColor\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ButtonAdv;\n","import React, { Component } from \"react\";\n\nimport ButtonAdv from \"./ButtonAdv\";\nimport Fade from \"react-bootstrap/Fade\";\nimport \"../../styles/global/SingleLineInput.css\";\n\nclass SLInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: false,\n      focus: this.props.focusOnMount,\n      preWidth: \"\",\n      inputWidth: this.props.minWidth,\n      input: \"\",\n      bg: \"#f8f9fa\",\n      bgHov: \"#e9ecef\",\n    };\n    this.inputRef = React.createRef();\n    this.sizerRef = React.createRef();\n  }\n\n  handleHover = () => {\n    this.setState({ hover: !this.state.hover });\n  };\n\n  handleFocus = (event) => {\n    this.setState({ focus: event });\n    if (event === false && this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  handleInputChange = (val) => {\n    this.setState({ input: val }, () => {\n      var sizerWidth = this.sizerRef.current.clientWidth;\n      if (sizerWidth < this.props.minWidth) {\n        this.setState({ inputWidth: this.props.minWidth });\n      } else {\n        this.setState({ inputWidth: sizerWidth + \"px\" });\n      }\n\n      this.props.inputSubmit(this.state.input);\n    });\n  };\n\n  handleClear = () => {\n    this.setState({ input: \"\" });\n    this.handleInputChange(\"\");\n  };\n\n  componentDidMount = () => {\n    if (this.props.bg) {\n      this.setState({ bg: this.props.bg, bgHov: this.props.bgHov });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Fade appear={true} in={this.props.display} unmountOnExit={true}>\n          <div className=\"SLInput-box\">\n            <span\n              class={[\n                \"SLInput-pre lead p-0 rounded-lg\",\n                this.state.input ? \"SLInput-pre-closed\" : \"mr-2\",\n              ].join(\" \")}\n              style={{\n                fontSize: this.props.textSize,\n                position: this.props.prepend ? \"relative\" : \"absolute\",\n              }}\n            >\n              {this.props.prepend}\n            </span>\n            <div\n              className={\"SLInput-input-wrapper pl-2 rounded-lg\"}\n              style={{\n                width: \"100%\",\n                minWidth: this.props.minWidth,\n                height: this.props.maxHeight,\n                background: this.state.hover ? this.state.bgHov : this.state.bg,\n                transition: \"all 200ms\",\n              }}\n              onMouseEnter={this.handleHover}\n              onMouseLeave={this.handleHover}\n            >\n              <input\n                ref={this.inputRef}\n                className={\"lead SLInput-input p-0 py-2\"}\n                type=\"text\"\n                autoFocus={this.props.focusOnMount}\n                onFocus={() => this.handleFocus(true)}\n                onBlur={() => this.handleFocus(false)}\n                value={this.state.input}\n                placeholder={this.props.placeholder}\n                size={4}\n                onChange={(e) => this.handleInputChange(e.target.value)}\n                style={{\n                  width: this.props.shrink ? this.state.inputWidth : \"100%\",\n                  fontSize: this.props.textSize,\n                  minWidth: \"50%\",\n                }}\n              />\n              <div\n                ref={this.sizerRef}\n                className=\"SLInput-sizer\"\n                style={{ fontSize: this.props.textSize }}\n              >\n                {this.state.input}\n              </div>\n              <div className=\"SLInput-clear-wrapper\">\n                <ButtonAdv\n                  display={this.state.input && this.props.clear}\n                  pill={true}\n                  labelColor={\"darkgrey\"}\n                  fontSize={\"1.1em\"}\n                  icon={\"close\"}\n                  iconColor={\"darkgrey\"}\n                  iconHov={\"lightcoral\"}\n                  bg={\"none\"}\n                  click={this.handleClear}\n                />\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SLInput;\n","import React from \"react\";\nimport Icon from \"./components/global/Icon\";\nimport ButtonAdv from \"./components/global/ButtonAdv\";\nimport SLInput from \"./components/global/SingleLineInput\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Icon\n        size={\"2em\"}\n        display={true}\n        icon={\"close\"}\n        iconColor={\"lightcoral\"}\n      />\n\n      <ButtonAdv\n        display={true}\n        pill={true}\n        label={\"Cancel Upload?\"}\n        labelColor={\"#6c757d\"}\n        shadow={true}\n        fontSize={\"1.1em\"}\n        icon={\"close\"}\n        iconColor={\"lightCoral\"}\n        reveal={true}\n        click={(event) => this.renderDisgardToast(true)}\n      />\n\n      <SLInput\n        display={true}\n        shrink={false}\n        textSize={\"2em\"}\n        prepend={\"Title:\"}\n        clear={true}\n        focusOnMount={true}\n        inputSubmit={this.handleTitleInput}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}