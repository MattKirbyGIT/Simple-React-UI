{"version":3,"sources":["components/global/ToastHandler.jsx","components/global/Icon.jsx","components/global/ButtonAdv.jsx","components/global/SingleLineInput.jsx","components/global/Toast.jsx","components/uploader/ImageUploader.jsx","components/global/MultiLineInput.jsx","components/global/Tag.jsx","components/global/TagHandler.jsx","components/global/ToggleSwitch.jsx","components/uploader/Uploader.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Component","Icon","state","icon","undefined","handleIcon","props","setState","faTimes","faImage","faArrowRight","faExclamationCircle","faCheck","faEllipsisH","faSearch","faBars","faUserPlus","faSignInAlt","faPlus","faTag","faClipboard","this","className","style","display","backgroundColor","bgColor","width","height","color","iconColor","fontSize","size","ButtonAdv","handleHover","hover","componentDidMount","bg","bgHov","label","classes","pill","shadow","topRight","join","reverse","Fragment","Fade","appear","in","unmountOnExit","handlePanelClasses","background","transition","flexDirection","justifyContent","onMouseEnter","onMouseLeave","onClick","click","maxWidth","reveal","labelColor","handleLabelClasses","iconHov","SLInput","handleFocus","event","focus","onBlur","handleInputChange","val","input","sizerWidth","sizerRef","current","clientWidth","minWidth","inputWidth","inputSubmit","handleClear","focusOnMount","preWidth","inputRef","React","createRef","class","textSize","position","prepend","maxHeight","ref","type","autoFocus","onFocus","value","placeholder","onChange","e","target","shrink","clear","Toast","startTimer","timer","timeout","setInterval","tick","remaining","clearInterval","handleToggle","handleAccept","accept","text","smallText","cancel","ImageUploader","inputFocus","handleFileDrag","dragOver","preventDefault","dropZoneEffect","toggleDragOver","handleFileDrop","dataTransfer","files","length","handleFile","html","getData","match","exec","url","convertURL","handleURL","validURL","errorToast","validateImage","console","log","returnImage","clearURL","handleFileInput","fileInput","handleClipboardPaste","navigator","clipboard","readText","then","main","sub","toast","key","renderToast","imgSrc","toastMessage","image","valid","includes","Math","round","img","Image","c","document","createElement","ctx","getContext","onload","naturalWidth","naturalHeight","drawImage","toBlob","blob","onerror","crossOrigin","src","id","onDragOver","onDragLeave","onDrop","backgroundImage","opacity","borderRadius","top","hidden","MLInput","newCount","ceil","split","maxRows","lineCount","max","handleCounter","counter","textAlign","borderColor","rows","visibility","Tag","hov","toggleEdit","tagData","edit","handleInput","TagHandler","addTagComponent","tagComponents","tagIdHandler","handleTagInput","newData","i","splice","maxTags","tagsArray","map","array","filter","x","ToggleSwitch","toggled","default","handleClick","label1","lable0","margin","marginLeft","marginRight","Uploader","renderDisgardToast","disgardToast","toggle","setImagePreview","imageUploader","previewImg","URL","createObjectURL","getElementById","handleTitleInput","title","handleDescriptionInput","description","handleTagsInput","tags","urlToastRef","imgToggleButton","App","renderUploader","uploader","newToast","toasts","apiResponse","fetch","res","callAPI","slice","Boolean","window","location","hostname","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.55114373.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass ToastHandler extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toasts: [],\n    };\n  }\n\n  renderToast = () => {\n    var currentToasts = this.state.toasts;\n    var newToasts = this.props.toasts;\n\n    newToasts.forEach((newToast) => {\n      var unique = true;\n      currentToasts.forEach((toast) => {\n        if (toast === newToast) {\n          unique = false;\n        }\n      });\n      if (unique) {\n        this.setState({ toasts: [newToast] });\n      }\n\n      return this.state.toasts;\n    });\n  };\n\n  componentDidUpdate() {\n    if (this.props.toast != this.state.toasts[this.state.toasts.length - 1]) {\n      this.setState({ toasts: [...this.state.toasts, this.props.toast] });\n  \n    }\n  }\n\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className={\"TH-wrapper\"}>\n          <div style={{ float: \"right\" }}>\n            <div style={{ width: \"100%\" }}>{this.props.toast}</div>\n          </div>\n          {this.props.children}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ToastHandler;\n","import React, { Component } from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faImage,\n  faTimes,\n  faSearch,\n  faArrowRight,\n  faExclamationCircle,\n  faCheck,\n  faEllipsisH,\n  faBars,\n  faPlus,\n  faUserPlus,\n  faSignInAlt,\n  faTag,\n  faClipboard,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"../../styles/global/Icon.css\";\n\nclass Icon extends Component {\n  state = { icon: undefined };\n\n  handleIcon = () => {\n    if (this.props.icon === \"close\") {\n      this.setState({ icon: faTimes });\n    } else if (this.props.icon === \"photo\") {\n      this.setState({ icon: faImage });\n    } else if (this.props.icon === \"arrowRight\") {\n      this.setState({ icon: faArrowRight });\n    } else if (this.props.icon === \"exclam\") {\n      this.setState({ icon: faExclamationCircle });\n    } else if (this.props.icon === \"check\") {\n      this.setState({ icon: faCheck });\n    } else if (this.props.icon === \"elipsis\") {\n      this.setState({ icon: faEllipsisH });\n    } else if (this.props.icon === \"search\") {\n      this.setState({ icon: faSearch });\n    } else if (this.props.icon === \"hamburgerMenu\") {\n      this.setState({ icon: faBars });\n    } else if (this.props.icon === \"userPlus\") {\n      this.setState({ icon: faUserPlus });\n    } else if (this.props.icon === \"signIn\") {\n      this.setState({ icon: faSignInAlt });\n    } else if (this.props.icon === \"plus\") {\n      this.setState({ icon: faPlus });\n    } else if (this.props.icon === \"tag\") {\n      this.setState({ icon: faTag });\n    } else if (this.props.icon === \"clipboard\") {\n      this.setState({ icon: faClipboard });\n    } else {\n    }\n  };\n\n  componentDidMount() {\n    this.handleIcon();\n  }\n\n  render() {\n    return (\n      <div\n        className=\"icon-wrapper p-2\"\n        style={{\n          display: this.props.display ? \"flex\" : \"none\",\n          backgroundColor: this.props.bgColor,\n          width: \"2em\",\n          height: \"2em\",\n        }}\n      >\n        <FontAwesomeIcon\n          className=\"icon effect\"\n          icon={this.state.icon}\n          color={this.props.iconColor}\n          style={{ fontSize: this.props.size ? this.props.size : \"1.4em\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Icon;\n","import React, { Component } from \"react\";\nimport Icon from \"./Icon\";\nimport Fade from \"react-bootstrap/Fade\";\nimport \"../../styles/global/ButtonAdv.css\";\n\nclass ButtonAdv extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      display: props.display,\n      hover: false,\n      bg: \"#f8f9fa\",\n      bgHov: \"#e9ecef\",\n      fontSize: \"1.2em\",\n      icon: props.icon,\n      label: props.label,\n    };\n  }\n\n  handlePanelClasses() {\n    var classes = [];\n    if (this.props.pill) {\n      classes[0] = \"rounded-pill\";\n    } else {\n      classes[0] = \"rounded-lg\";\n    }\n\n    if (this.props.shadow) {\n      classes[1] = \"shadow\";\n    }\n\n    if (this.props.topRight) {\n      classes[2] = \"topRight\";\n    }\n    return classes.join(\" \");\n  }\n\n  handleLabelClasses() {\n    var classes = [];\n    if (this.state.icon) {\n      if (this.props.reverse) {\n        classes[0] = \"pr-3\";\n      } else {\n        classes[0] = \"pl-3\";\n      }\n    } else {\n      classes[0] = \"px-3\";\n    }\n    return classes.join(\" \");\n  }\n\n  handleHover = () => {\n    this.setState({ hover: !this.state.hover });\n  };\n\n  componentDidMount = () => {\n    if (this.props.bg) {\n      this.setState({ bg: this.props.bg, bgHov: this.props.bgHov });\n    }\n\n    if (this.props.fontSize) {\n      this.setState({ fontSize: this.props.fontSize });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Fade appear={true} in={this.props.display} unmountOnExit={true}>\n          <div\n            style={{\n              display: this.props.display ? \"block\" : \"none\",\n              width: this.props.width,\n            }}\n          >\n            <div\n              className={\"TB-panel \" + this.handlePanelClasses()}\n              style={{\n                background: this.state.hover ? this.state.bgHov : this.state.bg,\n                transition: \"all 200ms\",\n                fontSize: this.state.fontSize,\n                flexDirection: this.props.reverse ? \"row-reverse\" : \"row\",\n                width: this.props.width,\n                justifyContent: \"center\",\n              }}\n              onMouseEnter={this.handleHover}\n              onMouseLeave={this.handleHover}\n              onClick={this.props.click}\n            >\n              <div\n                style={{\n                  maxWidth:\n                    this.props.reveal && !this.state.hover ? \"0\" : \"200px\",\n                  transition: \"all 200ms\",\n                  color: this.props.labelColor,\n                  display: this.state.label ? \"block\" : \"none\",\n                }}\n              >\n                <p className={\"TB-label my-2 \" + this.handleLabelClasses()}>\n                  {this.props.label}\n                </p>\n              </div>\n              <div\n                className={\"m-1\"}\n                style={{ display: this.state.icon ? \"block\" : \"none\" }}\n              >\n                <Icon\n                  size={this.state.fontSize}\n                  display={true}\n                  icon={this.state.icon}\n                  iconColor={\n                    this.state.hover && this.props.iconHov\n                      ? this.props.iconHov\n                      : this.props.iconColor\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ButtonAdv;\n","import React, { Component } from \"react\";\n\nimport ButtonAdv from \"./ButtonAdv\";\nimport Fade from \"react-bootstrap/Fade\";\nimport \"../../styles/global/SingleLineInput.css\";\n\nclass SLInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: false,\n      focus: this.props.focusOnMount,\n      preWidth: \"\",\n      inputWidth: this.props.minWidth,\n      input: \"\",\n      bg: \"#f8f9fa\",\n      bgHov: \"#e9ecef\",\n    };\n    this.inputRef = React.createRef();\n    this.sizerRef = React.createRef();\n  }\n\n  handleHover = () => {\n    this.setState({ hover: !this.state.hover });\n  };\n\n  handleFocus = (event) => {\n    this.setState({ focus: event });\n    if (event === false && this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  handleInputChange = (val) => {\n    this.setState({ input: val }, () => {\n      var sizerWidth = this.sizerRef.current.clientWidth;\n      if (sizerWidth < this.props.minWidth) {\n        this.setState({ inputWidth: this.props.minWidth });\n      } else {\n        this.setState({ inputWidth: sizerWidth + \"px\" });\n      }\n\n      this.props.inputSubmit(this.state.input);\n    });\n  };\n\n  handleClear = () => {\n    this.setState({ input: \"\" });\n    this.handleInputChange(\"\");\n  };\n\n  componentDidMount = () => {\n    if (this.props.bg) {\n      this.setState({ bg: this.props.bg, bgHov: this.props.bgHov });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Fade appear={true} in={this.props.display} unmountOnExit={true}>\n          <div className=\"SLInput-box\">\n            <span\n              class={[\n                \"SLInput-pre lead p-0 rounded-lg\",\n                this.state.input ? \"SLInput-pre-closed\" : \"mr-2\",\n              ].join(\" \")}\n              style={{\n                fontSize: this.props.textSize,\n                position: this.props.prepend ? \"relative\" : \"absolute\",\n              }}\n            >\n              {this.props.prepend}\n            </span>\n            <div\n              className={\"SLInput-input-wrapper pl-2 rounded-lg\"}\n              style={{\n                width: \"100%\",\n                minWidth: this.props.minWidth,\n                height: this.props.maxHeight,\n                background: this.state.hover ? this.state.bgHov : this.state.bg,\n                transition: \"all 200ms\",\n              }}\n              onMouseEnter={this.handleHover}\n              onMouseLeave={this.handleHover}\n            >\n              <input\n                ref={this.inputRef}\n                className={\"lead SLInput-input p-0 py-2\"}\n                type=\"text\"\n                autoFocus={this.props.focusOnMount}\n                onFocus={() => this.handleFocus(true)}\n                onBlur={() => this.handleFocus(false)}\n                value={this.state.input}\n                placeholder={this.props.placeholder}\n                size={4}\n                onChange={(e) => this.handleInputChange(e.target.value)}\n                style={{\n                  width: this.props.shrink ? this.state.inputWidth : \"100%\",\n                  fontSize: this.props.textSize,\n                  minWidth: \"50%\",\n                }}\n              />\n              <div\n                ref={this.sizerRef}\n                className=\"SLInput-sizer\"\n                style={{ fontSize: this.props.textSize }}\n              >\n                {this.state.input}\n              </div>\n              <div className=\"SLInput-clear-wrapper\">\n                <ButtonAdv\n                  display={this.state.input && this.props.clear}\n                  pill={true}\n                  labelColor={\"darkgrey\"}\n                  fontSize={\"1.1em\"}\n                  icon={\"close\"}\n                  iconColor={\"darkgrey\"}\n                  iconHov={\"lightcoral\"}\n                  bg={\"none\"}\n                  click={this.handleClear}\n                />\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SLInput;\n","import React, { Component } from \"react\";\nimport Fade from \"react-bootstrap/Fade\";\n\nimport Icon from \"./Icon\";\nimport ButtonAdv from \"./ButtonAdv\";\nimport \"../../styles/global/Toast.css\";\nimport { faThumbsDown } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Toast extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeout: props.timeout,\n      timer: 0,\n      hover: false,\n      display: true,\n      type: props.type,\n      icon: undefined,\n      text: props.text,\n    };\n  }\n\n  startTimer = () => {\n    if (this.state.timer === 0 && this.state.timeout) {\n      this.setState({ timer: setInterval(this.tick, 1000) });\n    }\n  };\n\n  tick = () => {\n    if (this.state.timeout > 0) {\n      let remaining = this.state.timeout - 1;\n      this.setState({\n        timeout: remaining,\n      });\n\n      if (remaining === 0) {\n        clearInterval(this.state.timer);\n        this.setState({ display: false });\n      }\n    }\n  };\n\n  componentDidMount() {\n    if (this.state.type === \"danger\") {\n      this.setState({\n        icon: (\n          <Icon\n            display={true}\n            icon={\"exclam\"}\n            iconColor={\"lightcoral\"}\n            size={\"2em\"}\n          />\n        ),\n      });\n    }\n\n    if (this.state.timeout) {\n      this.startTimer();\n    }\n\n    this.setState({ display: true });\n  }\n\n  handleHover = () => {\n    this.setState({ hover: !this.state.hover });\n  };\n\n  handleToggle = () => {\n    this.setState({ display: false });\n  };\n\n  handleAccept = () => {\n    this.props.accept();\n    this.handleToggle();\n  };\n\n  render() {\n    return (\n      <Fade appear={true} in={this.state.display} unmountOnExit={true}>\n        <div\n          className=\"TN-box shadow py-2 px-3 m-2\"\n          onMouseEnter={this.handleHover}\n          onMouseLeave={this.handleHover}\n          style={{\n            maxWidth: !this.state.display ? \"0\" : \"100%\",\n            transition: \"all 200ms\",\n          }}\n        >\n          <div className={\"TN-content-box\"}>\n            {this.state.icon}\n            <div className={\"TN-content\"}>\n              <p className=\"lead TN-text my-0 mx-3 text-muted\">\n                {this.props.text}\n              </p>\n              <small\n                className=\"TN-text-small lead my-0 mx-3\"\n                style={{ display: this.props.smallText ? \"block\" : \"none\" }}\n              >\n                {this.props.smallText}\n              </small>\n\n              <div\n                className=\"TN-choice mx-3 my-2\"\n                style={{\n                  display:\n                    this.props.cancel || this.props.accept ? \"flex\" : \"none\",\n                }}\n              >\n                <ButtonAdv\n                  display={this.props.cancel ? true : false}\n                  pill={true}\n                  label={\"Cancel\"}\n                  labelColor={\"#6c757d\"}\n                  fontSize={\"1.1em\"}\n                  icon={\"close\"}\n                  iconColor={\"lightCoral\"}\n                  click={(event) => this.handleToggle()}\n                />\n\n                <ButtonAdv\n                  display={this.props.accept ? true : false}\n                  pill={true}\n                  label={\"Accept\"}\n                  labelColor={\"#6c757d\"}\n                  fontSize={\"1.1em\"}\n                  icon={\"check\"}\n                  iconColor={\"#80F0B8\"}\n                  click={(event) => this.handleAccept()}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </Fade>\n    );\n  }\n}\n\nexport default Toast;\n","import React, { Component } from \"react\";\nimport Fade from \"react-bootstrap/Fade\";\nimport ButtonAdv from \"../global/ButtonAdv\";\nimport SLInput from \"../global/SingleLineInput\";\nimport Toast from \"../global/Toast\";\nimport \"../../styles/global/ImageUploader.css\";\n\nclass ImageUploader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imgSrc: \"https://picsum.photos/300/200?blur=2\",\n      dropZoneEffect: \"\",\n      dragOver: false,\n      inputFocus: false,\n      url: \"\",\n      validURL: false,\n      toast: false,\n      toastMessage: \"\",\n    };\n    this.fileInput = React.createRef();\n  }\n\n  handleFocus = () => {\n    this.setState({ inputFocus: !this.state.inputFocus });\n  };\n\n  handleFileDrag = (event, dragOver) => {\n    event.preventDefault();\n    if (dragOver) {\n      this.setState({ dropZoneEffect: \"dropZoneEffect\" });\n    } else if (!dragOver) {\n      this.setState({ dropZoneEffect: \"\" });\n    }\n  };\n\n  toggleDragOver = (e) => {\n    this.setState({ dragOver: e });\n  };\n\n  handleFileDrop = (event) => {\n    event.preventDefault();\n    var dataTransfer = event.dataTransfer;\n    var files = dataTransfer.files;\n\n    if (files.length) {\n      this.handleFile(files);\n    } else {\n      var html = dataTransfer.getData(\"text/html\");\n      var match = html && /\\bsrc=\"?([^\"\\s]+)\"?\\s*/.exec(html);\n      var url = match && match[1];\n\n      if (url) {\n        this.convertURL(url);\n      }\n    }\n  };\n\n  handleURL = (e) => {\n    var url = e;\n    var corsBypass = \"https://cors-anywhere.herokuapp.com/\";\n\n    this.setState({ url: url });\n    if (url.match(/\\.(jpeg|jpg|gif|png|svg)|(data:image)/) != null) {\n      this.setState({ validURL: true });\n      this.convertURL(url);\n    } else {\n      this.setState({ validURL: false });\n      //this.props.renderToast(\"danger\", \"Invalid URL!\", url, 5);\n      this.errorToast(\"Invalid URL!\",url )\n    }\n  };\n\n  validateImage(image) {\n    var valid = true;\n    //type\n    var validTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\n    if (!validTypes.includes(image.type)) {\n      //this.props.renderToast(\"danger\", \"Invalid file type!\", null, 5);\n      this.errorToast(\"Error\", \"Invalid file type!\")\n      valid = false;\n    }\n\n    //size\n    var maxSizeBytes = 4e6; // 4MB\n    if (image.size > maxSizeBytes) {\n      // this.props.renderToast(\n      //   \"danger\",\n      //   \"Maximum upload size exceeded! (Your image was \" +\n      //     Math.round((image.size / 1e6) * 10) / 10 +\n      //     \" MB)\",\n      //   null,\n      //   5\n      // );\n\n      this.errorToast(\n        \"Error\",\n        \"Maximum upload size exceeded! (Your image was \" +\n          Math.round((image.size / 1e6) * 10) / 10 +\n          \" MB)\"\n      );\n      valid = false;\n    }\n\n    return valid;\n  }\n\n  convertURL(url) {\n    var img = new Image();\n    var c = document.createElement(\"canvas\");\n    var ctx = c.getContext(\"2d\");\n\n    img.onload = () => {\n      c.width = img.naturalWidth; // update canvas size to match image\n      c.height = img.naturalHeight;\n      ctx.drawImage(img, 0, 0); // draw in image\n      c.toBlob((blob) => {\n        // get content as PNG blob\n        this.handleFile([blob]);\n      }, \"image/png\");\n    };\n    img.onerror = () => {\n      //alert(\"Error in uploading\");\n      this.setState({ validURL: false });\n    };\n\n    img.crossOrigin = \"\"; // if from different origin\n    img.src = url;\n  }\n\n  handleFile = (files) => {\n    if (files.length < 2 && files.length > 0) {\n      if (this.validateImage(files[0])) {\n        console.log(files[0]);\n        this.props.returnImage(files[0]);\n      }\n    } else {\n      this.errorToast(\"Error\", \"Only one file may be uploaded!\");\n      //this.props.toggleToast(true, \"Only one file may be uploaded!\");\n    }\n  };\n\n  clearURL = () => {\n    this.setState({ url: \"\" });\n  };\n\n  handleFileInput = () => {\n    this.fileInput.current.click();\n  };\n\n  handleClipboardPaste = () => {\n    navigator.clipboard.readText().then((text) => {\n      this.handleURL(text);\n    });\n  };\n\n  errorToast = (main, sub) => {\n    var toast = (\n      <Toast\n        key={this.props.renderToast[1]}\n        text={main}\n        type={\"danger\"}\n        smallText={sub}\n        timeout={false}\n      />\n    );\n    this.props.renderToast[0](toast);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Fade appear={true} in={this.props.display} unmountOnExit={true}>\n          <div id={\"uploader\"} className=\"img-uploader-panel bg-white\">\n            <div\n              className={\"dropzone bg-dark \"}\n              onDragOver={() => this.toggleDragOver(true)}\n              onDragLeave={() => this.toggleDragOver(false)}\n              onDrop={this.handleFileDrop}\n              style={{\n                backgroundImage: \"url(\" + this.state.imgSrc + \")\",\n                opacity: 1,\n                backgroundColor: \"black\",\n              }}\n            >\n              <div\n                className=\"drop-center\"\n                style={{\n                  width: this.state.dragOver ? \"95%\" : \"65%\",\n                  height: this.state.dragOver ? \"95%\" : \"30%\",\n                  fontSize: this.state.dragOver ? \"3em\" : \"1.2em\",\n                  borderRadius: this.state.dragOver ? \"10px\" : \"50px\",\n                  transition: \"all 200ms\",\n                }}\n              >\n                <p className=\"mb-0 mx-5\">\n                  {this.state.dragOver\n                    ? \"Drop!\"\n                    : \"Drag and drop your image here\"}\n                </p>\n              </div>\n            </div>\n\n            <hr\n              className=\"separator\"\n              style={{\n                width: \"15%\",\n                display: \"inline-block\",\n                clear: \"none\",\n                position: \"relative\",\n                top: \"0.7em\",\n              }}\n            />\n            <p\n              className=\"lead text-muted mt-3 mb-0 mx-3\"\n              style={{ display: \"inline-block\" }}\n            >\n              Alternatively\n            </p>\n            <hr\n              className=\"separator\"\n              style={{\n                width: \"15%\",\n                display: \"inline-block\",\n                clear: \"none\",\n                position: \"relative\",\n                top: \"0.7em\",\n              }}\n            />\n\n            <div className=\"alternate-upload mx-0  p-3\">\n              <div className={\"url-input-wrapper mb-2 \"}>\n                <div className={\"url-input-field\"}>\n                  <SLInput\n                    display={true}\n                    shrink={false}\n                    textSize={\"1.1em\"}\n                    placeholder={\"Paste an image URL\"}\n                    clear={true}\n                    inputSubmit={this.handleURL}\n                  />\n                </div>\n                <div className=\"ml-2\">\n                  <ButtonAdv\n                    display={true}\n                    pill={true}\n                    labelColor={\"#6c757d\"}\n                    fontSize={\"1.1em\"}\n                    icon={\"clipboard\"}\n                    iconColor={\"#6c757d\"}\n                    reveal={true}\n                    click={this.handleClipboardPaste}\n                  />\n                </div>\n              </div>\n\n              <div style={{ width: \"100%\" }}>\n                <input\n                  ref={this.fileInput}\n                  accept=\"image/*\"\n                  type=\"file\"\n                  className=\"form-control-file\"\n                  id=\"fileInput\"\n                  hidden={true}\n                  onChange={(e) =>\n                    this.handleFile(this.fileInput.current.files)\n                  }\n                />\n                <ButtonAdv\n                  display={true}\n                  width={\"100%\"}\n                  pill={true}\n                  label={\"Choose photo\"}\n                  labelColor={\"#6c757d\"}\n                  fontSize={\"1.1em\"}\n                  icon={\"photo\"}\n                  iconColor={\"#6c757d\"}\n                  click={this.handleFileInput}\n                />\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ImageUploader;\n","import React, { Component } from \"react\";\n\nimport \"../../styles/global/MultiLineInput.css\";\n\nclass MLInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: \"\",\n      inputWidth: \"\",\n      placeholder: props.placeholder,\n      lineCount: 1,\n      counter: \"\",\n    };\n    this.sizerRef = React.createRef();\n    this.inputRef = React.createRef();\n  }\n\n  handleInputChange = (val) => {\n    this.setState({ input: val }, () => {\n      var linesFromWidth = Math.ceil(\n        this.sizerRef.current.clientWidth / this.inputRef.current.clientWidth\n      );\n      var lineBreakCount = val.split(/\\r\\n|\\r|\\n/).length;\n      var newCount = linesFromWidth + lineBreakCount;\n\n      if (newCount >= this.props.maxRows) {\n        this.setState({ lineCount: this.props.maxRows });\n      } else {\n        this.setState({ lineCount: newCount });\n      }\n\n      if (this.props.max) {\n        this.handleCounter(val);\n      }\n\n      this.props.inputSubmit(this.state.input);\n    });\n  };\n\n  handleCounter = (val) => {\n    var length;\n    if (val.length <= this.props.max) {\n      length = val.length + \" / \" + this.props.max + \" character limit.\";\n    } else {\n      length = \"Too long!\";\n    }\n    this.setState({ counter: length });\n  };\n\n  componentDidMount = () => {\n    if (this.props.max) {\n      this.setState({\n        counter: 0 + \" / \" + this.props.max + \" character limit.\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className={\"p-4\"} style={{ textAlign: \"right\" }}>\n        <div\n          className=\"MLI-box lead rounded-lg\"\n          style={{\n            borderColor:\n              this.state.input.length > this.props.max ? \"lightcoral\" : \"blue\",\n          }}\n        >\n          <textarea\n            ref={this.inputRef}\n            className=\"MLI-input lead p-2\"\n            placeholder={this.state.placeholder}\n            rows={this.state.lineCount}\n            onChange={(e) => this.handleInputChange(e.target.value)}\n            style={{ fontSize: this.props.textSize }}\n          >\n            {this.state.input}\n          </textarea>\n          <p\n            ref={this.sizerRef}\n            className={\"MLI-inputSizer lead\"}\n            style={{ visibility: \"hidden\", fontSize: this.props.textSize }}\n          >\n            {this.state.input}\n          </p>\n        </div>\n        <small className={\"MLI-counter lead my-1\"}>{this.state.counter}</small>\n      </div>\n    );\n  }\n}\n\nexport default MLInput;\n","import React, { Component } from \"react\";\nimport Fade from \"react-bootstrap/Fade\";\nimport ButtonAdv from \"./ButtonAdv\";\nimport SLInput from \"./SingleLineInput\";\nimport \"../../styles/global/Tag.css\";\n\nclass Tag extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      display: true,\n      tagData: \"\",\n      hov: false,\n      edit: false,\n    };\n  }\n\n  handleHover = () => {\n    this.setState({ hov: !this.state.hov });\n  };\n\n  toggleEdit = () => {\n    if (!this.state.tagData.length > 0)\n      this.setState({ edit: !this.state.edit });\n  };\n\n  handleInput = (e) => {\n    if (!e) {\n      this.setState({ display: false });\n    }\n    this.props.inputSubmit(this.props.id, e);\n    this.setState({ tagData: e }, () => {});\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Fade in={this.state.display} appear={true} unmountOnExit={true}>\n          <div\n            className=\"TG-box shadow px-2 my-2 mr-4 ml-0 test\"\n            style={{\n              background: !this.state.hov ? \"#f8f9fa\" : \"#e9ecef\",\n              transition: \"all 200ms\",\n            }}\n            onMouseEnter={this.handleHover}\n            onMouseLeave={this.handleHover}\n          >\n            <div\n              className=\"\"\n              style={{ display: !this.state.edit ? \"block\" : \"none\" }}\n            >\n              <ButtonAdv\n                display={!this.state.edit}\n                reverse={true}\n                label={\"Tag\"}\n                fontSize={\"1.2em\"}\n                icon={\"plus\"}\n                iconColor={\"#6c757d\"}\n                labelColor={\"#6c757d\"}\n                bg={\"none\"}\n                bgHov={\"none\"}\n                click={this.toggleEdit}\n              />\n            </div>\n\n            <div\n              className=\"\"\n              style={{ display: this.state.edit ? \"inline-block\" : \"none\" }}\n            >\n              <SLInput\n                display={this.state.edit}\n                shrink={true}\n                textSize={\"1.1em\"}\n                maxHeight={\"50px\"}\n                minWidth={\"84px\"}\n                clear={true}\n                bg={\"none\"}\n                bgHov={\"none\"}\n                focusOnMount={true}\n                onBlur={this.toggleEdit}\n                inputSubmit={(e) => this.handleInput(e)}\n              />\n            </div>\n          </div>\n        </Fade>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Tag;\n","import React, { Component } from \"react\";\nimport Tag from \"./Tag\";\n\nclass TagHandler extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tagComponents: [],\n      tagData: [],\n      tagIdHandler: 0,\n      maxTags: this.props.maxTags,\n    };\n  }\n\n  addTagComponent = () => {\n    this.setState(\n      {\n        tagComponents: [\n          ...this.state.tagComponents,\n          <Tag\n            key={this.state.tagIdHandler}\n            id={this.state.tagIdHandler}\n            inputSubmit={this.handleTagInput}\n          />,\n        ],\n      },\n      () => {\n        this.setState({\n          tagData: [...this.state.tagData, [this.state.tagIdHandler, \"\"]],\n          tagIdHandler: this.state.tagIdHandler + 1,\n        });\n      }\n    );\n  };\n\n  handleTagInput = (id, newData) => {\n    var tagData = this.state.tagData;\n\n    for (var i = 0; i < tagData.length; i++) {\n      if (tagData[i][0] === id) {\n        if (newData.length === 0) {\n          tagData.splice(i, 1);\n        } else {\n          tagData[i][1] = newData;\n        }\n      }\n    }\n\n    if (\n      tagData[tagData.length - 1][1] !== \"\" &&\n      this.state.tagData.length < this.state.maxTags\n    ) {\n      this.addTagComponent();\n    }\n\n    this.setState({ tagData: tagData });\n\n    var tagsArray = tagData\n      .map((array) => {\n        return array[1];\n      })\n      .filter((x) => x);\n    console.log(tagsArray);\n    this.props.inputSubmit(tagsArray);\n  };\n\n  componentDidMount = () => {\n    this.addTagComponent();\n  };\n\n  render() {\n    return <div>{this.state.tagComponents}</div>;\n  }\n}\n\nexport default TagHandler;\n","import React, { Component } from \"react\";\nimport \"../../styles/global/ToggleSwitch.css\";\n\nclass ToggleSwitch extends Component {\n  state = {\n    hover: false,\n    toggled: this.props.default,\n    size: this.props.size ? this.props.size : \"25\",\n  };\n\n  handleHover = () => {\n    this.setState({ hover: !this.state.hover });\n  };\n\n  handleClick = () => {\n    this.setState({ toggled: !this.state.toggled }, () => {\n      if (this.props.inputSubmit) {\n        this.props.inputSubmit(this.state.toggled);\n      }\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div\n          className=\"TS-Wrapper bg-light p-3 rounded-pill\"\n          style={{\n            maxWidth: this.props.maxWidth ? this.props.maxWidth : \"200px\",\n          }}\n        >\n          <p\n            className=\"TS-Label lead text-muted mr-2\"\n            style={{\n              textAlign: \"left\",\n              position: this.props.label ? \"relative\" : \"absolute\",\n            }}\n          >\n            {this.props.label}\n            <span\n              className=\"TS-LabelToggle lead\"\n              style={{\n                color: this.state.toggled ? \"#80F0B8\" : \"lightcoral\",\n                transition: \"all 200ms\",\n              }}\n            >\n              {this.state.toggled ? this.props.label1 : this.props.lable0}\n            </span>\n          </p>\n          <div\n            className=\"TS-Box rounded-pill\"\n            style={{\n              transition: \"all 200ms\",\n              background: this.state.toggled ? \"#80F0B8\" : \"lightcoral\",\n            }}\n            onClick={this.handleClick}\n          >\n            <div\n              style={{\n                margin: this.state.size * 0.2 + \"px\",\n                width: this.state.size * 2.2,\n              }}\n            >\n              <div\n                className=\"TS-Thumb rounded-pill shadow\"\n                style={{\n                  background: !this.state.hover ? \"white\" : \"#e9ecef\",\n                  transition: \"all 100ms ease-in\",\n                  width: this.state.size + \"px\",\n                  height: this.state.size + \"px\",\n                  marginLeft: this.state.toggled\n                    ? this.state.size * 1.2 + \"px\"\n                    : \"0\",\n                  marginRight: !this.state.toggled\n                    ? this.state.size * 1.2 + \"px\"\n                    : \"0\",\n                }}\n                onMouseEnter={this.handleHover}\n                onMouseLeave={this.handleHover}\n              ></div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ToggleSwitch;\n","import React, { Component } from \"react\";\nimport Fade from \"react-bootstrap/Fade\";\nimport ImageUploader from \"./ImageUploader\";\nimport ButtonAdv from \"../global/ButtonAdv\";\nimport SLInput from \"../global/SingleLineInput\";\nimport MLInput from \"../global/MultiLineInput\";\nimport TagHandler from \"../global/TagHandler\";\nimport Toast from \"../global/Toast\";\nimport ToggleSwitch from \"../global/ToggleSwitch\";\nimport \"../../styles/global/Uploader.css\";\n\nclass Uploader extends Component {\n  constructor(props) {\n    super(props);\n    this.urlToastRef = React.createRef();\n\n    this.state = {\n      imageUploader: true,\n      imgToggleButton: true,\n     \n\n      img: [],\n      description: \"\",\n      title: \"\",\n      tags: [],\n    };\n  }\n\n  renderDisgardToast = (event) => {\n    if (event === true) {\n      this.setState({ disgardToast: true }, () => {\n        var toast = (\n          <Toast\n            key={this.props.renderToast[1]}\n            text={\"Disgard Post?\"}\n            type={\"danger\"}\n            smallText={\"Your post will not be saved\"}\n            cancel={true}\n            accept={() => this.props.toggle()}\n          />\n        );\n        this.props.renderToast[0](toast);\n      });\n    }\n  };\n\n \n\n\n  setImagePreview = (e) => {\n    this.setState({ img: [e] }, () => {\n      this.setState({ imageUploader: false });\n      var previewImg = URL.createObjectURL(\n        this.state.img[this.state.img.length - 1]\n      );\n      var img = document.createElement(\"img\");\n      img.src = previewImg;\n      img.id = \"previewImg\";\n      document.getElementById(\"imgViewWrapper\").prepend(img);\n    });\n  };\n\n  handleTitleInput = (event) => {\n    this.setState({ title: event });\n  };\n\n  handleDescriptionInput = (event) => {\n    this.setState({ description: event });\n  };\n\n  handleTagsInput = (event) => {\n    this.setState({ tags: event });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Fade appear={true} in={this.props.display} unmountOnExit={true}>\n          <div className=\"uploader-wrapper\">\n            <div\n              className=\"step1-panel\"\n              style={{ display: this.state.img.length ? \"none\" : \"block\" }}\n            >\n              <div className=\"uploader-heading p-2\">\n                <h1 className=\"lead title m-0\">New Post</h1>\n                <small className=\"lead text-muted\">\n                  Upload an image to get started.\n                </small>\n              </div>\n              <div style={{ position: \"relative\" }}>\n                <ImageUploader\n                  display={this.state.imageUploader}\n                  returnImage={(e) => this.setImagePreview(e)}\n                  renderToast={this.props.renderToast}\n                />\n                <ButtonAdv\n                  display={true}\n                  pill={true}\n                  label={\"Cancel Upload?\"}\n                  labelColor={\"#6c757d\"}\n                  shadow={true}\n                  fontSize={\"1.1em\"}\n                  icon={\"close\"}\n                  iconColor={\"lightCoral\"}\n                  reveal={true}\n                  topRight={true}\n                  click={(event) => this.renderDisgardToast(true)}\n                />\n              </div>\n            </div>\n\n            <div\n              className={\"step2-panel container-fluid\"}\n              style={{\n                display: this.state.imageUploader ? \"none\" : \"inline-block\",\n              }}\n            >\n              <div className=\"row mb-2\">\n                <div\n                  className=\"col-12 col-md-8 mb-2\"\n                  style={{ display: \"inline-block\" }}\n                >\n                  <small className=\"lead text-muted pb-4\">\n                    Enter your post title below.\n                  </small>\n                  <SLInput\n                    display={true}\n                    shrink={false}\n                    textSize={\"2em\"}\n                    prepend={\"Title:\"}\n                    clear={true}\n                    focusOnMount={true}\n                    inputSubmit={this.handleTitleInput}\n                  />\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-12 col-md-8 mb-4\">\n                  <div id=\"imgViewWrapper\" className={\"imgViewBox\"}>\n                    <MLInput\n                      textSize={\"1em\"}\n                      placeholder={\"Add an image description!\"}\n                      max={100}\n                      maxRows={10}\n                      inputSubmit={this.handleDescriptionInput}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12 col-md-4\">\n                  <div className=\"post-options\">\n                    <p className=\"lead text-muted mb-2\">Post Visibility:</p>\n                    <ToggleSwitch\n                      label={\"Visible to: \"}\n                      maxWidth={\"800px\"}\n                      default={true}\n                      lable0={\"Only me\"}\n                      label1={\"Community\"}\n                    />\n                    <p className=\"lead text-muted mt-3 mb-0\">Add Tags:</p>\n                    <div>\n                      <TagHandler\n                        maxTags={5}\n                        inputSubmit={this.handleTagsInput}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Uploader;\n","import React, { Component } from \"react\";\nimport ToastHandler from \"./components/global/ToastHandler\";\nimport Uploader from \"./components/uploader/Uploader\";\nimport Toast from \"./components/global/Toast\";\n\nimport \"../src/App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: \"\",\n      uploader: true,\n      toasts: [],\n    };\n  }\n\n  callAPI() {\n    fetch(\"http://localhost:9000/testAPI\")\n      .then((res) => res.text())\n      .then((res) => this.setState({ apiResponse: res }));\n  }\n\n  componentWillMount() {\n    this.callAPI();\n  }\n\n  renderUploader = () => {\n    this.setState({ uploader: !this.state.uploader });\n  };\n\n  renderToast = (newToast) => {\n    this.setState({ toasts: [newToast, ...this.state.toasts]});\n  };\n\n  render() {\n    return (\n      <div className=\"App bg-white\">\n      <div style={{position: \"absolute\"}}>\n          {this.state.toasts.slice(0,1)}\n      </div>\n      \n\n        <Uploader\n          display={this.state.uploader}\n          toggle={this.renderUploader}\n          renderToast={[(toast) => this.renderToast(toast), this.state.toasts.length]}\n        />\n\n\n        \n\n        \n\n        <p>{this.state.apiResponse}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}